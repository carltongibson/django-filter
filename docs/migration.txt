Migrating to 1.0
================

The 1.0 release of django-filter introduces several API changes and refinements
that break forwards compatibility. Below is a list of deprecations and
instructions on how to migrate to the 1.0 release. A forwards-compatible 0.15
release has also been created to help with migration. It is compatible with
both the existing and new APIs and will raise warnings for deprecated behavior.


QuerySet methods are no longer proxied
--------------------------------------
Details: https://github.com/carltongibson/django-filter/pull/440

The ``__iter__()``, ``__len__()``, ``__getitem__()``, ``count()`` methods are
no longer proxied from the queryset. To fix this, call the methods on the
``.qs`` property itself.

.. code-block:: python

    f = UserFilter(request.GET, queryset=User.objects.all())

    # 0.x
    for obj in f:
        ...

    # 1.0
    for obj in f.qs:
        ...


Move FilterSet options to Meta class
------------------------------------
Details: https://github.com/carltongibson/django-filter/issues/430

Several ``FilterSet`` options have been moved to the ``Meta`` class to prevent
potential conflicts with declared filter names. This includes:

* ``filterset_class``
* ``strict``

.. code-block:: python

    # 0.x
    class UserFilter(FilterSet):
        filter_overrides = {}
        ...

    # 1.0
    class UserFilter(FilterSet):
        ...

        class Meta:
            filter_overrides = {}
